import { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { Button } from '@/components/ui/button';
import Icon from '@/components/ui/icon';
import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog';

// Типы пентестов
const pentestTypes = [
  {
    id: 'external',
    title: 'Внешний пентест',
    description: 'Проверка внешней поверхности инфраструктуры — веб-сайты, API, публичные сервисы.',
    whatWeDo: 'разведка (OSINT), сканирование периметра, эксплуатация уязвимостей, эскалация доступа.',
    whatClientGets: 'PoC-уязвимости, риск-оценку, дорожную карту исправлений, бизнес-отчёт.',
    icon: 'Shield',
    quickDays: '1-3 дн',
    fullDays: '1-2 нед',
    basePrice: '150000'
  },
  {
    id: 'internal',
    title: 'Внутренний пентест',
    description: 'Тестирование с позиции злоумышленника внутри сети (инсайдер или компрометация).',
    whatWeDo: 'lateral movement, проверка сегментации, эскалация привилегий, анализ политик.',
    whatClientGets: 'сценарии атак, карты путей, список критических уязвимостей, приоритетные контрмеры.',
    icon: 'Network',
    quickDays: '2-5 дн',
    fullDays: '2-3 нед',
    basePrice: '200000'
  },
  {
    id: 'social',
    title: 'Социальная инженерия',
    description: 'Проверка устойчивости персонала к фишингу и атакам на доверие.',
    whatWeDo: 'фишинг-кампании, звонки, физический доступ (по согл.).',
    whatClientGets: 'статистику кликов, сценарии фишинга, рекомендации по обучению и реагированию.',
    icon: 'Users',
    quickDays: '3-7 дн',
    fullDays: '2-4 нед',
    basePrice: '180000'
  },
  {
    id: 'wireless',
    title: 'Wi-Fi / беспроводные сети',
    description: 'Анализ безопасности беспроводной инфраструктуры.',
    whatWeDo: 'атаки на WPA/WPA2/WPA3, сегментация гостевых сетей, проверка физической доступности AP.',
    whatClientGets: 'карту рисков Wi-Fi, PoC по уязвимым AP, рекомендации по настройке.',
    icon: 'Wifi',
    quickDays: '1-2 дн',
    fullDays: '1 нед',
    basePrice: '120000'
  },
  {
    id: 'web',
    title: 'Веб-приложения (включая анализ исходного кода)',
    description: 'Глубокая проверка web/API-приложений.',
    whatWeDo: 'OWASP Top10 + ручные тесты, аудит кода (если доступен).',
    whatClientGets: 'PoC, list-of-fixes, рекомендации по CI/CD-интеграции.',
    icon: 'Globe',
    quickDays: '3-5 дн',
    fullDays: '2-4 нед',
    basePrice: '250000'
  },
  {
    id: 'mobile',
    title: 'Мобильные приложения (включая анализ исходного кода)',
    description: 'Тестирование iOS/Android-приложений.',
    whatWeDo: 'статический/динамический анализ, защита API, управление секретами.',
    whatClientGets: 'PoC, рекомендации по хранению данных и защите API.',
    icon: 'Smartphone',
    quickDays: '5-7 дн',
    fullDays: '3-4 нед',
    basePrice: '300000'
  },
  {
    id: 'redteam',
    title: 'Red Team',
    description: 'Имитация целевых APT-атак.',
    whatWeDo: 'разведка, многошаговые атаки, обход SOC/EDR, комбинированные векторы.',
    whatClientGets: 'сценарий атаки, доказательства PoC, рекомендации по процессам реагирования.',
    icon: 'Target',
    quickDays: 'н/д',
    fullDays: '4-8 нед',
    basePrice: '500000'
  }
];

const teamMembers = [
  {
    level: 'Senior',
    experience: '10 лет',
    skills: 'Pentest, Web, AppSec/DevSecOps',
    specialization: 'Integration, Compliance',
    certs: ['OSCP', 'CEH', 'CRTO']
  },
  {
    level: 'Senior',
    experience: '10 лет',
    skills: 'Pentest, Web, AppSec',
    specialization: 'DevSecOps, Mobile',
    certs: ['OSCP', 'CWAP', 'eMAPT']
  },
  {
    level: 'Middle',
    experience: '5 лет',
    skills: 'Pentest',
    specialization: 'DevSecOps/AppSec, Web',
    certs: ['eJPT', 'CEH']
  },
  {
    level: 'Middle',
    experience: '2 года',
    skills: 'Pentest, Web',
    specialization: 'AppSec',
    certs: ['eJPT', 'CWAP']
  },
  {
    level: 'Junior',
    experience: '2 года',
    skills: 'Pentest, Web',
    specialization: 'AppSec',
    certs: ['eJPT']
  },
  {
    level: 'Junior',
    experience: '2 года',
    skills: 'Mobile, Web',
    specialization: 'DevSecOps/AppSec, Pentest',
    certs: ['eMAPT', 'CEH']
  }
];

const workflowSteps = [
  { title: 'Согласование целей', icon: 'Target', description: 'Определяем периметр и цели тестирования' },
  { title: 'Разведка и анализ', icon: 'Search', description: 'Сбор информации о целевых системах' },
  { title: 'Эксплуатация уязвимостей', icon: 'Zap', description: 'Проведение контролируемых атак' },
  { title: 'Отчёт и рекомендации', icon: 'FileText', description: 'Подготовка технического и бизнес-отчёта' },
  { title: 'Обсуждение и обучение команды', icon: 'Users', description: 'Презентация результатов и обучение' }
];

export default function Pentest() {
  const [activeService] = useState<'pentest' | 'appsec'>('pentest');
  const [activeTab, setActiveTab] = useState(pentestTypes[0].id);
  const [activeScope, setActiveScope] = useState<'quick' | 'full' | 'redteam'>('full');
  const [activeStep, setActiveStep] = useState(0);
  const [showQuoteModal, setShowQuoteModal] = useState(false);
  const [showReportModal, setShowReportModal] = useState(false);
  const [animationsEnabled, setAnimationsEnabled] = useState(true);
  const navigate = useNavigate();

  const handleServiceChange = (service: 'pentest' | 'appsec') => {
    if (service === 'pentest') {
      navigate('/pentest');
    } else {
      navigate('/appsec');
    }
  };

  const activeTabData = pentestTypes.find(t => t.id === activeTab) || pentestTypes[0];

  const getScopeInfo = (scope: string) => {
    switch(scope) {
      case 'quick':
        return { days: activeTabData.quickDays, price: Math.round(parseInt(activeTabData.basePrice) * 0.6) };
      case 'full':
        return { days: activeTabData.fullDays, price: parseInt(activeTabData.basePrice) };
      case 'redteam':
        return { days: '4-8 нед', price: Math.round(parseInt(activeTabData.basePrice) * 2) };
      default:
        return { days: activeTabData.fullDays, price: parseInt(activeTabData.basePrice) };
    }
  };

  const QuoteRequestModal = () => (
    <Dialog open={showQuoteModal} onOpenChange={setShowQuoteModal}>
      <DialogContent className="sm:max-w-md">
        <DialogHeader>
          <DialogTitle>Запрос оценки стоимости</DialogTitle>
        </DialogHeader>
        <div className="space-y-4">
          <div>
            <label className="text-sm font-medium">Тип тестирования</label>
            <input 
              type="text" 
              value={activeTabData.title} 
              disabled 
              className="w-full mt-1 p-2 border rounded-md bg-muted"
            />
          </div>
          <div>
            <label className="text-sm font-medium">Количество хостов/модулей</label>
            <input 
              type="number" 
              placeholder="Укажите количество" 
              className="w-full mt-1 p-2 border rounded-md"
            />
          </div>
          <div>
            <label className="text-sm font-medium">Контактная информация</label>
            <input 
              type="email" 
              placeholder="email@company.com" 
              className="w-full mt-1 p-2 border rounded-md"
            />
          </div>
          <Button className="w-full">Отправить запрос</Button>
        </div>
      </DialogContent>
    </Dialog>
  );

  const ReportModal = () => (
    <Dialog open={showReportModal} onOpenChange={setShowReportModal}>
      <DialogContent className="sm:max-w-4xl">
        <DialogHeader>
          <DialogTitle>Пример отчёта по пентесту</DialogTitle>
        </DialogHeader>
        <div className="space-y-6">
          <div className="grid md:grid-cols-2 gap-6">
            <div className="bg-card p-6 rounded-lg border text-center">
              <Icon name="FileText" size={48} className="mx-auto mb-4 text-primary" />
              <h3 className="text-lg font-semibold mb-2">Технический отчёт</h3>
              <p className="text-muted-foreground mb-4">
                PoC, воспроизводимые шаги, CVSS-оценки, примеры исправлений
              </p>
              <Button className="w-full">Скачать технический PDF</Button>
            </div>
            <div className="bg-card p-6 rounded-lg border text-center">
              <Icon name="BarChart3" size={48} className="mx-auto mb-4 text-primary" />
              <h3 className="text-lg font-semibold mb-2">Бизнес-отчёт</h3>
              <p className="text-muted-foreground mb-4">
                Executive Summary, влияние на бизнес, дорожная карта
              </p>
              <Button variant="outline" className="w-full">Скачать бизнес PDF</Button>
            </div>
          </div>
          <div className="bg-muted/30 p-6 rounded-lg">
            <img 
              src="/img/d158f1ac-8ced-41fc-8761-b45dcfbf5e94.jpg" 
              alt="Пример отчёта о пентесте"
              className="w-full rounded-lg shadow-md"
            />
          </div>
          <div className="text-center text-sm text-muted-foreground">
            <p>Получите реальный пример отчёта на ваш email в течение 5 минут</p>
          </div>
        </div>
      </DialogContent>
    </Dialog>
  );

  return (
    <div className={`min-h-screen bg-background ${!animationsEnabled ? 'motion-reduce' : ''}`}>
      {/* Navigation */}
      <nav className="border-b border-border/40 bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60 sticky top-0 z-50">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex items-center justify-between h-16">
            <div className="flex items-center space-x-6">
              <div className="flex items-center">
                <img 
                  src="https://cdn.poehali.dev/files/d65cf35b-734d-408e-b02c-102776cabda9.png" 
                  alt="Logo" 
                  className="w-32 h-32 object-contain"
                />
              </div>
              
              {/* Service Toggle */}
              <div className="relative bg-orange/20 p-1 rounded-full border border-border shadow-inner">
                <div 
                  className={`absolute top-1 bottom-1 rounded-full bg-background shadow-md transition-all duration-300 ease-in-out ${
                    activeService === 'pentest' ? 'left-1 right-1/2' : 'left-1/2 right-1'
                  }`}
                />
                <div className="relative flex">
                  <button
                    onClick={() => handleServiceChange('pentest')}
                    className={`px-4 py-2 text-sm font-medium rounded-full transition-colors duration-200 z-10 ${
                      activeService === 'pentest' 
                        ? 'text-foreground' 
                        : 'text-orange hover:text-orange/80'
                    }`}
                  >
                    PenTest
                  </button>
                  <button
                    onClick={() => handleServiceChange('appsec')}
                    className={`px-4 py-2 text-sm font-medium rounded-full transition-colors duration-200 z-10 ${
                      activeService === 'appsec' 
                        ? 'text-foreground' 
                        : 'text-orange hover:text-orange/80'
                    }`}
                  >
                    AppSec
                  </button>
                </div>
              </div>
            </div>
            <div className="hidden md:flex items-center space-x-8">
              <a href="#services" className="text-muted-foreground hover:text-foreground transition-colors">Услуги</a>
              <a href="#methodology" className="text-muted-foreground hover:text-foreground transition-colors">Методология</a>
              <Button 
                size="sm"
                onClick={() => setAnimationsEnabled(!animationsEnabled)}
                variant="ghost"
                className="text-xs"
              >
                {animationsEnabled ? 'Отключить анимации' : 'Включить анимации'}
              </Button>
              <Button size="sm">Консультация</Button>
            </div>
          </div>
        </div>
      </nav>

      {/* Hero Section */}
      <section className="py-24 lg:py-32 relative overflow-hidden">
        <div className="absolute inset-0 bg-gradient-to-br from-primary/5 to-background z-0"></div>
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 relative z-10">
          <div className="grid lg:grid-cols-2 gap-12 items-center mb-16">
            <div className="text-center lg:text-left">
              <h1 className="text-4xl sm:text-5xl lg:text-6xl font-bold text-foreground mb-6 leading-tight">
                Пентест, который показывает реальную картину рисков
              </h1>
              <p className="text-xl text-muted-foreground mb-8 leading-relaxed">
                Secvoya помогает бизнесу обнаружить и закрыть уязвимости, прежде чем это сделают злоумышленники.
              </p>
              <div className="flex flex-col sm:flex-row gap-4 justify-center lg:justify-start">
                <Button size="lg" className="px-8" onClick={() => setShowQuoteModal(true)}>
                  Заказать пентест
                </Button>
                <Button 
                  variant="outline" 
                  size="lg" 
                  className="px-8" 
                  onClick={() => setShowReportModal(true)}
                >
                  Получить пример отчёта
                </Button>
              </div>
            </div>
            <div className="hidden lg:block">
              <img 
                src="/img/685656c8-df3d-4faa-8f29-3de30adb3bea.jpg" 
                alt="Команда экспертов по кибербезопасности"
                className="rounded-lg shadow-xl"
              />
            </div>
          </div>

          {/* Why Pentest */}
          <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-6 mb-16">
            {[
              { icon: 'Target', title: 'Реальные сценарии атак', desc: 'а не формальная галочка' },
              { icon: 'TrendingDown', title: 'Снижение рисков', desc: 'и приоритезация инвестиций в защиту' },
              { icon: 'CheckCircle', title: 'Соответствие стандартам', desc: 'и регуляторам' },
              { icon: 'Users', title: 'Укрепление доверия', desc: 'клиентов и партнёров' }
            ].map((item, index) => (
              <div key={index} className="text-center p-6 bg-card rounded-lg border">
                <Icon name={item.icon as any} size={32} className="mx-auto mb-4 text-primary" />
                <h3 className="font-semibold mb-2">{item.title}</h3>
                <p className="text-sm text-muted-foreground">{item.desc}</p>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* Pentest Types */}
      <section id="services" className="py-16 bg-muted/30">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <h2 className="text-3xl font-bold text-center mb-12">Виды пентестов</h2>
          
          <div className="grid lg:grid-cols-4 gap-8">
            {/* Tabs */}
            <div className="lg:col-span-1">
              <div className="space-y-2">
                {pentestTypes.map((type) => (
                  <button
                    key={type.id}
                    onClick={() => setActiveTab(type.id)}
                    className={`w-full text-left p-4 rounded-lg transition-all ${
                      activeTab === type.id
                        ? 'bg-primary text-primary-foreground shadow-md'
                        : 'bg-card hover:bg-muted border'
                    }`}
                  >
                    <div className="flex items-center space-x-3">
                      <Icon name={type.icon as any} size={20} />
                      <span className="font-medium text-sm">{type.title}</span>
                    </div>
                  </button>
                ))}
              </div>

              {/* Scope Filter */}
              <div className="mt-6 p-4 bg-card rounded-lg border">
                <h4 className="font-medium mb-3">Покрытие:</h4>
                <div className="space-y-2">
                  {[
                    { key: 'quick', label: 'Quick (1–5 дн)' },
                    { key: 'full', label: 'Full (2–4 нед)' },
                    { key: 'redteam', label: 'Red Team (по согласованию)' }
                  ].map((scope) => (
                    <label key={scope.key} className="flex items-center space-x-2">
                      <input
                        type="radio"
                        name="scope"
                        value={scope.key}
                        checked={activeScope === scope.key}
                        onChange={(e) => setActiveScope(e.target.value as any)}
                        className="text-primary"
                      />
                      <span className="text-sm">{scope.label}</span>
                    </label>
                  ))}
                </div>
              </div>
            </div>

            {/* Content */}
            <div className="lg:col-span-3">
              <div className="bg-card p-8 rounded-lg border">
                <div className="flex items-center justify-between mb-6">
                  <h3 className="text-2xl font-bold">{activeTabData.title}</h3>
                  <Icon 
                    name={activeTabData.icon as any} 
                    size={32} 
                    className={`text-primary ${animationsEnabled ? 'animate-pulse' : ''}`} 
                  />
                </div>
                
                <div className="space-y-6">
                  <div>
                    <h4 className="font-semibold text-primary mb-2">Что это</h4>
                    <p className="text-muted-foreground">{activeTabData.description}</p>
                  </div>
                  
                  <div>
                    <h4 className="font-semibold text-primary mb-2">Что мы делаем</h4>
                    <p className="text-muted-foreground">{activeTabData.whatWeDo}</p>
                  </div>
                  
                  <div>
                    <h4 className="font-semibold text-primary mb-2">Что получает клиент</h4>
                    <p className="text-muted-foreground">{activeTabData.whatClientGets}</p>
                  </div>

                  {/* Dynamic Pricing */}
                  <div className="bg-primary/5 p-4 rounded-lg border border-primary/20">
                    <div className="flex justify-between items-center mb-2">
                      <span className="font-medium">Сроки:</span>
                      <span className="text-primary font-semibold">{getScopeInfo(activeScope).days}</span>
                    </div>
                    <div className="flex justify-between items-center">
                      <span className="font-medium">Ориентировочная стоимость:</span>
                      <span className="text-primary font-semibold">от {getScopeInfo(activeScope).price.toLocaleString()} ₽</span>
                    </div>
                  </div>

                  <Button 
                    className="w-full" 
                    onClick={() => setShowQuoteModal(true)}
                  >
                    Запросить оценку стоимости
                  </Button>
                </div>
              </div>
            </div>
          </div>
        </div>
      </section>

      {/* How We Work */}
      <section id="methodology" className="py-16">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <h2 className="text-3xl font-bold text-center mb-12">Как мы работаем</h2>
          
          <div className="max-w-4xl mx-auto">
            {workflowSteps.map((step, index) => (
              <div 
                key={index}
                className={`flex items-center space-x-6 p-6 rounded-lg transition-all cursor-pointer ${
                  activeStep === index ? 'bg-primary/5 border border-primary/20' : 'hover:bg-muted/30'
                }`}
                onClick={() => setActiveStep(index)}
              >
                <div className={`p-3 rounded-full ${
                  activeStep === index ? 'bg-primary text-primary-foreground' : 'bg-muted'
                }`}>
                  <Icon name={step.icon as any} size={24} />
                </div>
                <div>
                  <h3 className="font-semibold text-lg">{step.title}</h3>
                  <p className="text-muted-foreground">{step.description}</p>
                </div>
                <div className="ml-auto text-2xl font-bold text-primary">
                  {String(index + 1).padStart(2, '0')}
                </div>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* What Client Gets */}
      <section className="py-16 bg-muted/30">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <h2 className="text-3xl font-bold text-center mb-12">Что получает клиент</h2>
          
          <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
            {[
              { icon: 'FileText', title: 'Подробный отчёт', desc: '(технический + бизнес-резюме)' },
              { icon: 'Code', title: 'PoC и воспроизводимые шаги', desc: 'для каждой уязвимости' },
              { icon: 'Map', title: 'Приоритетная дорожная карта', desc: 'исправлений (roadmap)' },
              { icon: 'Users', title: 'Поддержка команды', desc: 'на этапе внедрения' }
            ].map((item, index) => (
              <div key={index} className="text-center p-6 bg-card rounded-lg border">
                <Icon name={item.icon as any} size={32} className="mx-auto mb-4 text-primary" />
                <h3 className="font-semibold mb-2">{item.title}</h3>
                <p className="text-sm text-muted-foreground">{item.desc}</p>
              </div>
            ))}
          </div>
          
          <div className="text-center">
            <Button onClick={() => setShowReportModal(true)}>
              Получить пример отчёта
            </Button>
          </div>
        </div>
      </section>

      {/* Team Expertise */}
      <section className="py-16">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <h2 className="text-3xl font-bold text-center mb-12">Экспертиза команды</h2>
          
          <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
            {teamMembers.map((member, index) => (
              <div 
                key={index} 
                className="group perspective-1000"
              >
                <div className="relative h-48 transform-style-preserve-3d group-hover:rotate-y-180 transition-transform duration-500">
                  {/* Front */}
                  <div className="absolute inset-0 backface-hidden bg-card p-6 rounded-lg border flex flex-col justify-center">
                    <div className="text-center">
                      <div className="w-16 h-16 bg-primary/10 rounded-full mx-auto mb-4 flex items-center justify-center">
                        <Icon name="User" size={24} className="text-primary" />
                      </div>
                      <h3 className="font-semibold text-lg">{member.level}</h3>
                      <p className="text-muted-foreground">{member.experience} опыта</p>
                      <p className="text-sm text-primary mt-2">{member.skills}</p>
                    </div>
                  </div>
                  
                  {/* Back */}
                  <div className="absolute inset-0 backface-hidden rotate-y-180 bg-primary text-primary-foreground p-6 rounded-lg flex flex-col justify-center">
                    <div className="text-center">
                      <h4 className="font-semibold mb-2">Специализация:</h4>
                      <p className="text-sm mb-4">{member.specialization}</p>
                      <h4 className="font-semibold mb-2">Сертификаты:</h4>
                      <div className="flex flex-wrap justify-center gap-1">
                        {member.certs.map((cert, certIndex) => (
                          <span 
                            key={certIndex}
                            className="bg-primary-foreground text-primary px-2 py-1 text-xs rounded"
                          >
                            {cert}
                          </span>
                        ))}
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* Final CTA */}
      <section className="py-16 bg-primary text-primary-foreground">
        <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
          <h2 className="text-3xl font-bold mb-6">
            Готовы проверить безопасность вашей компании?
          </h2>
          <div className="flex flex-col sm:flex-row gap-4 justify-center">
            <Button 
              size="lg" 
              variant="secondary"
              onClick={() => setShowQuoteModal(true)}
            >
              Оставить заявку
            </Button>
            <Button 
              size="lg" 
              variant="outline"
              className="border-primary-foreground text-primary-foreground hover:bg-primary-foreground hover:text-primary"
            >
              Получить экспресс-анализ (бесплатно)
            </Button>
          </div>
        </div>
      </section>

      {/* Modals */}
      <QuoteRequestModal />
      <ReportModal />
    </div>
  );
}