import { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Separator } from '@/components/ui/separator';
import { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle } from '@/components/ui/dialog';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { Textarea } from '@/components/ui/textarea';
import Icon from '@/components/ui/icon';

// Типы для пентестов
interface PentestType {
  id: string;
  title: string;
  what: string;
  whatWeDo: string;
  clientGets: string;
  icon: string;
}

interface CoverageFilter {
  id: 'quick' | 'full' | 'redteam';
  label: string;
  duration: string;
  artifacts: string;
  priceMultiplier: number;
}

const pentestTypes: PentestType[] = [
  {
    id: 'external',
    title: 'Внешний пентест',
    what: 'Проверка внешней поверхности инфраструктуры — веб-сайты, API, публичные сервисы.',
    whatWeDo: 'разведка (OSINT), сканирование периметра, эксплуатация уязвимостей, эскалация доступа.',
    clientGets: 'PoC-уязвимости, риск-оценку, дорожную карту исправлений, бизнес-отчёт.',
    icon: 'Globe'
  },
  {
    id: 'internal',
    title: 'Внутренний пентест',
    what: 'Тестирование с позиции злоумышленника внутри сети (инсайдер или компрометация).',
    whatWeDo: 'lateral movement, проверка сегментации, эскалация привилегий, анализ политик.',
    clientGets: 'сценарии атак, карты путей, список критических уязвимостей, приоритетные контрмеры.',
    icon: 'Network'
  },
  {
    id: 'social',
    title: 'Социальная инженерия',
    what: 'Проверка устойчивости персонала к фишингу и атакам на доверие.',
    whatWeDo: 'фишинг-кампании, звонки, физический доступ (по согл.).',
    clientGets: 'статистику кликов, сценарии фишинга, рекомендации по обучению и реагированию.',
    icon: 'Users'
  },
  {
    id: 'wifi',
    title: 'Wi-Fi / беспроводные сети',
    what: 'Анализ безопасности беспроводной инфраструктуры.',
    whatWeDo: 'атаки на WPA/WPA2/WPA3, сегментация гостевых сетей, проверка физической доступности AP.',
    clientGets: 'карту рисков Wi-Fi, PoC по уязвимым AP, рекомендации по настройке.',
    icon: 'Wifi'
  },
  {
    id: 'web',
    title: 'Веб-приложения (включая анализ исходного кода)',
    what: 'Глубокая проверка web/API-приложений.',
    whatWeDo: 'OWASP Top10 + ручные тесты, аудит кода (если доступен).',
    clientGets: 'PoC, list-of-fixes, рекомендации по CI/CD-интеграции.',
    icon: 'Code'
  },
  {
    id: 'mobile',
    title: 'Мобильные приложения (включая анализ исходного кода)',
    what: 'Тестирование iOS/Android-приложений.',
    whatWeDo: 'статический/динамический анализ, защита API, управление секретами.',
    clientGets: 'PoC, рекомендации по хранению данных и защите API.',
    icon: 'Smartphone'
  },
  {
    id: 'redteam',
    title: 'Red Team',
    what: 'Имитация целевых APT-атак.',
    whatWeDo: 'разведка, многошаговые атаки, обход SOC/EDR, комбинированные векторы.',
    clientGets: 'сценарий атаки, доказательства PoC, рекомендации по процессам реагирования.',
    icon: 'Target'
  }
];

const coverageFilters: CoverageFilter[] = [
  {
    id: 'quick',
    label: 'Quick (1–5 дн)',
    duration: '1-5 дней',
    artifacts: 'Краткий отчёт, основные уязвимости',
    priceMultiplier: 0.6
  },
  {
    id: 'full',
    label: 'Full (2–4 нед)',
    duration: '2-4 недели',
    artifacts: 'Полный отчёт, PoC, roadmap, поддержка',
    priceMultiplier: 1.0
  },
  {
    id: 'redteam',
    label: 'Red Team (по согласованию)',
    duration: 'по согласованию',
    artifacts: 'Комплексный сценарий атаки, глубокая экспертиза',
    priceMultiplier: 2.5
  }
];

const workSteps = [
  {
    title: 'Согласование целей',
    icon: 'Target',
    description: 'Определяем scope, цели и критерии успеха'
  },
  {
    title: 'Разведка и анализ',
    icon: 'Search',
    description: 'OSINT, mapping инфраструктуры, анализ поверхности атак'
  },
  {
    title: 'Эксплуатация уязвимостей',
    icon: 'Zap',
    description: 'Контролируемые атаки и проверка защитных механизмов'
  },
  {
    title: 'Отчёт и рекомендации',
    icon: 'FileText',
    description: 'Техническая документация и бизнес-резюме'
  },
  {
    title: 'Обсуждение и обучение команды',
    icon: 'GraduationCap',
    description: 'Презентация результатов и передача знаний'
  }
];

const teamMembers = [
  {
    level: 'Senior',
    experience: '10 лет',
    skills: 'Pentest, Web, AppSec/DevSecOps',
    specialization: 'Integration, Compliance',
    certs: ['OSCP', 'CEH', 'CRTO']
  },
  {
    level: 'Senior',
    experience: '10 лет',
    skills: 'Pentest, Web, AppSec',
    specialization: 'DevSecOps, Mobile',
    certs: ['OSCP', 'CWAP', 'eMAPT']
  },
  {
    level: 'Middle',
    experience: '5 лет',
    skills: 'Pentest',
    specialization: 'DevSecOps/AppSec, Web',
    certs: ['eJPT', 'CEH']
  },
  {
    level: 'Middle',
    experience: '2 года',
    skills: 'Pentest, Web',
    specialization: 'AppSec',
    certs: ['eJPT', 'CWAP']
  },
  {
    level: 'Junior',
    experience: '2 года',
    skills: 'Pentest, Web',
    specialization: 'AppSec',
    certs: ['eJPT']
  },
  {
    level: 'Junior',
    experience: '2 года',
    skills: 'Mobile, Web',
    specialization: 'DevSecOps/AppSec, Pentest',
    certs: ['eMAPT', 'eJPT']
  }
];

export default function Pentest() {
  const [activeService] = useState<'pentest' | 'appsec'>('pentest');
  const [activeTab, setActiveTab] = useState<string>('external');
  const [activeCoverage, setActiveCoverage] = useState<'quick' | 'full' | 'redteam'>('full');
  const [activeStep, setActiveStep] = useState<number>(0);
  const [showQuoteModal, setShowQuoteModal] = useState(false);
  const [showReportModal, setShowReportModal] = useState(false);
  const [animationsEnabled, setAnimationsEnabled] = useState(!window.matchMedia('(prefers-reduced-motion: reduce)').matches);
  const [quoteFormData, setQuoteFormData] = useState({
    testType: '',
    hosts: '',
    name: '',
    email: '',
    phone: '',
    company: '',
    details: ''
  });
  
  const navigate = useNavigate();

  // Автоматическая смена активного шага
  useEffect(() => {
    if (!animationsEnabled) return;
    
    const interval = setInterval(() => {
      setActiveStep(prev => (prev + 1) % workSteps.length);
    }, 3000);
    
    return () => clearInterval(interval);
  }, [animationsEnabled]);

  // Обработка переключения сервисов
  const handleServiceChange = (service: 'pentest' | 'appsec') => {
    if (service === 'pentest') {
      navigate('/pentest');
    } else {
      navigate('/appsec');
    }
  };

  // Получение текущего типа пентеста
  const currentPentest = pentestTypes.find(p => p.id === activeTab) || pentestTypes[0];
  const currentCoverage = coverageFilters.find(c => c.id === activeCoverage) || coverageFilters[1];

  // Базовые цены (в рублях)
  const basePrices: Record<string, number> = {
    external: 400000,
    internal: 500000,
    social: 300000,
    wifi: 250000,
    web: 450000,
    mobile: 550000,
    redteam: 800000
  };

  const getCurrentPrice = () => {
    const basePrice = basePrices[activeTab] || 400000;
    return Math.round(basePrice * currentCoverage.priceMultiplier);
  };

  // Обработка отправки формы запроса
  const handleQuoteSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    console.log('Quote request:', quoteFormData);
    setShowQuoteModal(false);
  };

  const handleReportView = () => {
    setShowReportModal(true);
  };

  return (
    <div className={`min-h-screen bg-background ${!animationsEnabled ? 'motion-reduce' : ''}`}>
      {/* Navigation - идентичен AppSec */}
      <nav className="border-b border-border/40 bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60 sticky top-0 z-50">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex items-center justify-between h-16">
            <div className="flex items-center space-x-6">
              <div className="flex items-center">
                <img 
                  src="https://cdn.poehali.dev/files/d65cf35b-734d-408e-b02c-102776cabda9.png" 
                  alt="Secvoya Logo" 
                  className="w-32 h-32 object-contain"
                />
              </div>
              
              {/* Service Toggle */}
              <div className="relative bg-orange/20 p-1 rounded-full border border-border shadow-inner">
                <div 
                  className={`absolute top-1 bottom-1 rounded-full bg-background shadow-md transition-all duration-300 ease-in-out ${
                    activeService === 'pentest' ? 'left-1 right-1/2' : 'left-1/2 right-1'
                  }`}
                />
                <div className="relative flex">
                  <button
                    onClick={() => handleServiceChange('pentest')}
                    className={`px-4 py-2 text-sm font-medium rounded-full transition-colors duration-200 z-10 ${
                      activeService === 'pentest' 
                        ? 'text-foreground' 
                        : 'text-orange hover:text-orange/80'
                    }`}
                  >
                    PenTest
                  </button>
                  <button
                    onClick={() => handleServiceChange('appsec')}
                    className={`px-4 py-2 text-sm font-medium rounded-full transition-colors duration-200 z-10 ${
                      activeService === 'appsec' 
                        ? 'text-foreground' 
                        : 'text-orange hover:text-orange/80'
                    }`}
                  >
                    AppSec
                  </button>
                </div>
              </div>
            </div>
            <div className="hidden md:flex items-center space-x-8">
              <a href="#services" className="text-muted-foreground hover:text-foreground transition-colors">Услуги</a>
              <a href="#methodology" className="text-muted-foreground hover:text-foreground transition-colors">Методология</a>
              <button
                onClick={() => setAnimationsEnabled(!animationsEnabled)}
                className="text-xs text-muted-foreground hover:text-foreground transition-colors"
                aria-label={animationsEnabled ? 'Отключить анимации' : 'Включить анимации'}
              >
                {animationsEnabled ? 'Отключить анимации' : 'Включить анимации'}
              </button>
              <Button size="sm">Консультация</Button>
            </div>
          </div>
        </div>
      </nav>

      {/* Hero Section */}
      <section className="py-24 lg:py-32">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="text-center animate-fade-in">
            <h1 className="text-4xl sm:text-5xl lg:text-6xl font-bold text-foreground mb-6 leading-tight">
              Пентест, который показывает<br />
              <span className="text-primary">реальную картину рисков</span>
            </h1>
            <p className="text-xl text-muted-foreground mb-8 max-w-3xl mx-auto leading-relaxed">
              Secvoya помогает бизнесу обнаружить и закрыть уязвимости, прежде чем это сделают злоумышленники.
            </p>
            <div className="flex flex-col sm:flex-row gap-4 justify-center items-center">
              <Button size="lg" className="px-8" onClick={() => setShowQuoteModal(true)}>
                <Icon name="Calendar" size={18} className="mr-2" />
                Заказать пентест
              </Button>
              <Button 
                variant="outline" 
                size="lg" 
                className="px-8 border-orange text-orange hover:bg-orange hover:text-white"
                onClick={handleReportView}
              >
                <Icon name="FileText" size={18} className="mr-2" />
                Получить пример отчёта
              </Button>
            </div>
          </div>
        </div>
      </section>

      {/* Зачем нужен пентест */}
      <section className="py-16 bg-muted/30">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <h2 className="text-3xl font-bold text-center mb-12">Зачем нужен пентест?</h2>
          <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-8">
            {[
              {
                icon: 'Target',
                title: 'Реальные сценарии атак',
                subtitle: 'а не формальная галочка'
              },
              {
                icon: 'TrendingDown', 
                title: 'Снижение рисков',
                subtitle: 'и приоритезация инвестиций в защиту'
              },
              {
                icon: 'FileCheck',
                title: 'Соответствие стандартам',
                subtitle: 'и регуляторам'
              },
              {
                icon: 'ShieldCheck',
                title: 'Укрепление доверия',
                subtitle: 'клиентов и партнёров'
              }
            ].map((item, index) => (
              <Card key={index} className="animate-scale-in hover:shadow-lg transition-all duration-300">
                <CardHeader className="text-center">
                  <div className="w-12 h-12 bg-secondary/10 rounded-lg flex items-center justify-center mx-auto mb-4">
                    <Icon name={item.icon as any} size={24} className="text-secondary" />
                  </div>
                  <CardTitle className="text-lg">{item.title}</CardTitle>
                </CardHeader>
                <CardContent>
                  <p className="text-sm text-muted-foreground text-center">
                    {item.subtitle}
                  </p>
                </CardContent>
              </Card>
            ))}
          </div>
        </div>
      </section>

      {/* Виды пентестов */}
      <section id="services" className="py-16">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="text-center mb-12">
            <h2 className="text-3xl font-bold mb-4">Виды пентестов</h2>
            <p className="text-muted-foreground max-w-2xl mx-auto">
              Интерактивные вкладки с детальной информацией о каждом виде тестирования
            </p>
          </div>

          <div className="grid lg:grid-cols-4 gap-8">
            {/* Вертикальные вкладки слева */}
            <div className="lg:col-span-1">
              <div className="space-y-2 sticky top-24">
                {pentestTypes.map((type) => (
                  <button
                    key={type.id}
                    onClick={() => setActiveTab(type.id)}
                    className={`w-full text-left p-4 rounded-lg transition-all duration-500 group ${
                      activeTab === type.id
                        ? 'bg-primary text-primary-foreground shadow-md'
                        : 'bg-card hover:bg-muted border border-border'
                    }`}
                    aria-label={`Выбрать ${type.title}`}
                  >
                    <div className="flex items-center space-x-3">
                      <Icon
                        name={type.icon as any}
                        size={20}
                        className={`${
                          activeTab === type.id 
                            ? 'text-primary-foreground' 
                            : 'text-muted-foreground group-hover:text-foreground'
                        } ${animationsEnabled ? 'transition-colors duration-200' : ''}`}
                      />
                      <span className="text-sm font-medium">{type.title}</span>
                    </div>
                  </button>
                ))}
              </div>
            </div>

            {/* Контент справа */}
            <div className="lg:col-span-3">
              <Card className="h-full">
                <CardHeader>
                  <div className="flex items-center justify-between">
                    <div className="flex items-center space-x-3">
                      <div className="w-12 h-12 bg-primary/10 rounded-lg flex items-center justify-center">
                        <Icon 
                          name={currentPentest.icon as any} 
                          size={24} 
                          className={`text-primary ${animationsEnabled ? 'animate-pulse' : ''}`}
                        />
                      </div>
                      <div>
                        <CardTitle className="text-xl">{currentPentest.title}</CardTitle>
                      </div>
                    </div>
                    
                    {/* Мини-анимация */}
                    <div className="w-16 h-16 bg-muted/30 rounded-lg flex items-center justify-center">
                      <div className={`w-8 h-8 bg-primary/20 rounded-full ${animationsEnabled ? 'animate-pulse' : ''}`}></div>
                    </div>
                  </div>

                  {/* Фильтры покрытия */}
                  <div className="mt-6 p-4 bg-muted/30 rounded-lg">
                    <h4 className="font-semibold mb-3">Выберите покрытие:</h4>
                    <div className="grid grid-cols-3 gap-2">
                      {coverageFilters.map((filter) => (
                        <label key={filter.id} className="flex items-center space-x-2 cursor-pointer">
                          <input
                            type="radio"
                            name="coverage"
                            value={filter.id}
                            checked={activeCoverage === filter.id}
                            onChange={(e) => setActiveCoverage(e.target.value as any)}
                            className="text-primary focus:ring-primary"
                          />
                          <span className="text-sm font-medium">{filter.label}</span>
                        </label>
                      ))}
                    </div>
                  </div>

                  {/* Dynamic Pricing Widget */}
                  <Card className="mt-4 bg-orange/5 border-orange/20">
                    <CardContent className="p-4">
                      <div className="flex items-center justify-between">
                        <div>
                          <Badge variant="outline" className="text-orange border-orange mb-2">
                            {currentCoverage.label}
                          </Badge>
                          <p className="text-sm text-muted-foreground">{currentCoverage.duration}</p>
                          <p className="text-xs text-muted-foreground mt-1">{currentCoverage.artifacts}</p>
                        </div>
                        <div className="text-right">
                          <p className="text-lg font-bold text-orange">
                            от {getCurrentPrice().toLocaleString('ru-RU')} ₽
                          </p>
                          <Button 
                            size="sm" 
                            onClick={() => {
                              setQuoteFormData(prev => ({
                                ...prev,
                                testType: currentPentest.title
                              }));
                              setShowQuoteModal(true);
                            }}
                            className="mt-2"
                          >
                            Запросить оценку стоимости
                          </Button>
                        </div>
                      </div>
                    </CardContent>
                  </Card>
                </CardHeader>

                <CardContent className="space-y-6">
                  {/* Три секции */}
                  <div className="grid md:grid-cols-3 gap-6">
                    <Card className="bg-primary/5">
                      <CardHeader>
                        <CardTitle className="text-base flex items-center space-x-2">
                          <Icon name="Info" size={16} className="text-primary" />
                          <span>Что это</span>
                        </CardTitle>
                      </CardHeader>
                      <CardContent>
                        <p className="text-sm text-muted-foreground">{currentPentest.what}</p>
                      </CardContent>
                    </Card>

                    <Card className="bg-secondary/5">
                      <CardHeader>
                        <CardTitle className="text-base flex items-center space-x-2">
                          <Icon name="Settings" size={16} className="text-secondary" />
                          <span>Что мы делаем</span>
                        </CardTitle>
                      </CardHeader>
                      <CardContent>
                        <p className="text-sm text-muted-foreground">{currentPentest.whatWeDo}</p>
                      </CardContent>
                    </Card>

                    <Card className="bg-orange/5">
                      <CardHeader>
                        <CardTitle className="text-base flex items-center space-x-2">
                          <Icon name="Package" size={16} className="text-orange" />
                          <span>Что получает клиент</span>
                        </CardTitle>
                      </CardHeader>
                      <CardContent>
                        <p className="text-sm text-muted-foreground">{currentPentest.clientGets}</p>
                      </CardContent>
                    </Card>
                  </div>
                </CardContent>
              </Card>
            </div>
          </div>
        </div>
      </section>

      {/* Как мы работаем */}
      <section id="methodology" className="py-16 bg-muted/30">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="text-center mb-12">
            <h2 className="text-3xl font-bold mb-4">Как мы работаем</h2>
            <p className="text-muted-foreground max-w-2xl mx-auto">
              Пятиэтапный процесс с анимацией последовательности
            </p>
          </div>

          <div className="max-w-4xl mx-auto">
            <div className="flex justify-center mb-8">
              <div className="flex items-center space-x-4">
                {workSteps.map((step, index) => (
                  <div key={index} className="flex items-center">
                    <button
                      onClick={() => setActiveStep(index)}
                      className={`w-12 h-12 rounded-full flex items-center justify-center transition-all duration-500 ${
                        activeStep === index
                          ? 'bg-primary text-primary-foreground shadow-lg scale-110'
                          : activeStep > index
                          ? 'bg-secondary text-secondary-foreground'
                          : 'bg-muted text-muted-foreground hover:bg-muted/80'
                      }`}
                      aria-label={`Шаг ${index + 1}: ${step.title}`}
                    >
                      {activeStep > index ? (
                        <Icon name="Check" size={20} />
                      ) : (
                        <span className="font-semibold">{index + 1}</span>
                      )}
                    </button>
                    
                    {index < workSteps.length - 1 && (
                      <div 
                        className={`w-16 h-1 mx-2 rounded transition-colors duration-500 ${
                          activeStep > index ? 'bg-secondary' : 'bg-muted'
                        }`} 
                      />
                    )}
                  </div>
                ))}
              </div>
            </div>

            <Card className="bg-gradient-to-r from-primary/5 to-secondary/5">
              <CardContent className="p-8">
                <div className="text-center">
                  <div className="w-20 h-20 bg-primary rounded-full flex items-center justify-center mx-auto mb-6">
                    <Icon 
                      name={workSteps[activeStep].icon as any} 
                      size={32} 
                      className="text-primary-foreground" 
                    />
                  </div>
                  
                  <h3 className="text-2xl font-bold mb-4">
                    {workSteps[activeStep].title}
                  </h3>
                  
                  <p className="text-lg text-muted-foreground max-w-2xl mx-auto">
                    {workSteps[activeStep].description}
                  </p>
                </div>
              </CardContent>
            </Card>
          </div>
        </div>
      </section>

      {/* Что получает клиент */}
      <section className="py-16">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="text-center mb-12">
            <h2 className="text-3xl font-bold mb-4">Что получает клиент</h2>
          </div>

          <div className="grid lg:grid-cols-2 gap-8">
            <div className="space-y-6">
              <Card>
                <CardHeader>
                  <CardTitle className="flex items-center space-x-3">
                    <Icon name="FileText" size={20} className="text-primary" />
                    <span>Подробный отчёт</span>
                  </CardTitle>
                  <CardDescription>
                    технический + бизнес-резюме
                  </CardDescription>
                </CardHeader>
                <CardContent>
                  <p className="text-sm text-muted-foreground">
                    Технические детали с PoC для команды разработки и executive summary для руководства.
                  </p>
                </CardContent>
              </Card>

              <Card>
                <CardHeader>
                  <CardTitle className="flex items-center space-x-3">
                    <Icon name="Code" size={20} className="text-primary" />
                    <span>PoC и воспроизводимые шаги</span>
                  </CardTitle>
                </CardHeader>
                <CardContent>
                  <p className="text-sm text-muted-foreground">
                    Пошаговые инструкции для воспроизведения каждой найденной уязвимости.
                  </p>
                </CardContent>
              </Card>
            </div>

            <div className="space-y-6">
              <Card>
                <CardHeader>
                  <CardTitle className="flex items-center space-x-3">
                    <Icon name="Map" size={20} className="text-primary" />
                    <span>Приоритетная дорожная карта исправлений</span>
                  </CardTitle>
                  <CardDescription>
                    roadmap
                  </CardDescription>
                </CardHeader>
                <CardContent>
                  <p className="text-sm text-muted-foreground">
                    План устранения с приоритизацией по бизнес-рискам и ресурсным затратам.
                  </p>
                </CardContent>
              </Card>

              <Card>
                <CardHeader>
                  <CardTitle className="flex items-center space-x-3">
                    <Icon name="Users" size={20} className="text-primary" />
                    <span>Поддержка команды на этапе внедрения</span>
                  </CardTitle>
                </CardHeader>
                <CardContent>
                  <p className="text-sm text-muted-foreground">
                    Консультации по устранению уязвимостей и улучшению процессов безопасности.
                  </p>
                </CardContent>
              </Card>
            </div>
          </div>

          <div className="text-center mt-8">
            <Button 
              size="lg" 
              variant="outline" 
              className="border-orange text-orange hover:bg-orange hover:text-white"
              onClick={handleReportView}
            >
              <Icon name="Download" size={18} className="mr-2" />
              Получить пример отчёта
            </Button>
          </div>
        </div>
      </section>

      {/* Экспертиза команды */}
      <section className="py-16 bg-muted/30">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="text-center mb-12">
            <h2 className="text-3xl font-bold mb-4">Экспертиза команды</h2>
            <p className="text-muted-foreground max-w-2xl mx-auto">
              Карточки с flip-анимацией при hover
            </p>
          </div>

          <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
            {teamMembers.map((member, index) => (
              <div key={index} className="group perspective-1000">
                <div className="relative h-64 transform-style-preserve-3d group-hover:rotate-y-180 transition-transform duration-500">
                  {/* Front */}
                  <Card className="absolute inset-0 backface-hidden cursor-pointer">
                    <CardHeader className="text-center">
                      <div className="w-16 h-16 bg-secondary/10 rounded-full mx-auto mb-4 flex items-center justify-center">
                        <Icon name="User" size={24} className="text-secondary" />
                      </div>
                      <Badge className={`w-fit mx-auto mb-2 ${
                        member.level === 'Senior' ? 'bg-primary text-primary-foreground' :
                        member.level === 'Middle' ? 'bg-orange text-white' :
                        'bg-secondary text-secondary-foreground'
                      }`}>
                        {member.level}
                      </Badge>
                      <CardTitle className="text-lg">{member.experience}</CardTitle>
                      <CardDescription>опыта</CardDescription>
                    </CardHeader>
                    <CardContent>
                      <p className="text-sm text-center text-muted-foreground">
                        {member.skills}
                      </p>
                    </CardContent>
                  </Card>

                  {/* Back */}
                  <Card className="absolute inset-0 backface-hidden rotate-y-180 bg-primary text-primary-foreground cursor-pointer">
                    <CardHeader className="text-center">
                      <CardTitle className="text-lg">Экспертиза</CardTitle>
                    </CardHeader>
                    <CardContent className="space-y-4">
                      <div>
                        <h4 className="font-semibold mb-2">Специализация:</h4>
                        <p className="text-sm">{member.specialization}</p>
                      </div>
                      
                      <div>
                        <h4 className="font-semibold mb-2">Сертификаты:</h4>
                        <div className="flex flex-wrap gap-1">
                          {member.certs.map((cert, certIndex) => (
                            <Badge 
                              key={certIndex}
                              variant="outline" 
                              className="text-xs border-primary-foreground text-primary-foreground"
                            >
                              {cert}
                            </Badge>
                          ))}
                        </div>
                      </div>
                    </CardContent>
                  </Card>
                </div>
              </div>
            ))}
          </div>

          <div className="mt-12 text-center">
            <Card className="bg-secondary/5 border-secondary/20 max-w-2xl mx-auto">
              <CardContent className="p-6">
                <h3 className="text-xl font-bold mb-4">Сертификаты команды</h3>
                <div className="flex flex-wrap justify-center gap-3">
                  {['OSCP', 'CEH', 'CRTO', 'CWAP', 'eJPT', 'eMAPT'].map((cert) => (
                    <Badge key={cert} className="bg-orange text-white">
                      {cert}
                    </Badge>
                  ))}
                </div>
              </CardContent>
            </Card>
          </div>
        </div>
      </section>

      {/* Финальный CTA */}
      <section className="py-16">
        <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
          <h2 className="text-3xl font-bold mb-4">
            Готовы проверить безопасность вашей компании?
          </h2>
          <p className="text-xl text-muted-foreground mb-8">
            Получите профессиональную оценку или начните с экспресс-анализа
          </p>
          
          <div className="flex flex-col sm:flex-row gap-4 justify-center mb-8">
            <Button size="lg" className="px-8" onClick={() => setShowQuoteModal(true)}>
              <Icon name="MessageSquare" size={18} className="mr-2" />
              Оставить заявку
            </Button>
            <Button 
              variant="outline" 
              size="lg" 
              className="px-8 border-orange text-orange hover:bg-orange hover:text-white"
            >
              <Icon name="Zap" size={18} className="mr-2" />
              Получить экспресс-анализ (бесплатно)
            </Button>
          </div>

          <div className="bg-orange/10 p-4 rounded-lg border border-orange/20 mb-8">
            <p className="text-sm text-orange font-medium">
              Требуется срочная помощь? — PoC-патч за 24–48 ч (по запросу)
            </p>
          </div>

          <Separator className="my-8" />
          
          <div className="grid md:grid-cols-3 gap-8 text-center">
            <div>
              <Icon name="Mail" size={24} className="mx-auto mb-2 text-secondary" />
              <h4 className="font-semibold mb-1">Email</h4>
              <p className="text-muted-foreground">hello@secvoya.ru</p>
            </div>
            <div>
              <Icon name="MessageCircle" size={24} className="mx-auto mb-2 text-secondary" />
              <h4 className="font-semibold mb-1">Telegram</h4>
              <p className="text-muted-foreground">@secvoya_support</p>
            </div>
            <div>
              <Icon name="Phone" size={24} className="mx-auto mb-2 text-secondary" />
              <h4 className="font-semibold mb-1">Телефон</h4>
              <p className="text-muted-foreground">+7 (908) 534 6430</p>
            </div>
          </div>
        </div>
      </section>

      {/* Footer - идентичен AppSec */}
      <footer className="border-t border-border bg-muted/30">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
          <div className="flex flex-col md:flex-row justify-between items-center">
            <div className="flex items-center space-x-3 mb-4 md:mb-0">
              <img 
                src="https://cdn.poehali.dev/files/d65cf35b-734d-408e-b02c-102776cabda9.png" 
                alt="Secvoya Logo" 
                className="w-32 h-32 object-contain"
              />
            </div>
            <p className="text-sm text-muted-foreground">
              © 2024 Secvoya. Безопасная разработка как процесс.
            </p>
          </div>
        </div>
      </footer>

      {/* Модал запроса оценки */}
      <Dialog open={showQuoteModal} onOpenChange={setShowQuoteModal}>
        <DialogContent className="sm:max-w-md">
          <DialogHeader>
            <DialogTitle>Запросить оценку стоимости</DialogTitle>
            <DialogDescription>
              {currentPentest.title} — {currentCoverage.label}
            </DialogDescription>
          </DialogHeader>
          <form onSubmit={handleQuoteSubmit} className="space-y-4">
            <div>
              <Label htmlFor="testType">Тип тестирования</Label>
              <Input
                id="testType"
                value={currentPentest.title}
                disabled
                className="bg-muted"
              />
            </div>
            
            <div>
              <Label htmlFor="hosts">Количество хостов/модулей *</Label>
              <Input
                id="hosts"
                placeholder="Например: 5 хостов, 3 веб-приложения"
                value={quoteFormData.hosts}
                onChange={(e) => setQuoteFormData(prev => ({...prev, hosts: e.target.value}))}
                required
              />
            </div>

            <div className="grid grid-cols-2 gap-4">
              <div>
                <Label htmlFor="name">Имя *</Label>
                <Input
                  id="name"
                  value={quoteFormData.name}
                  onChange={(e) => setQuoteFormData(prev => ({...prev, name: e.target.value}))}
                  required
                />
              </div>
              <div>
                <Label htmlFor="company">Компания</Label>
                <Input
                  id="company"
                  value={quoteFormData.company}
                  onChange={(e) => setQuoteFormData(prev => ({...prev, company: e.target.value}))}
                />
              </div>
            </div>

            <div className="grid grid-cols-2 gap-4">
              <div>
                <Label htmlFor="email">Email *</Label>
                <Input
                  id="email"
                  type="email"
                  value={quoteFormData.email}
                  onChange={(e) => setQuoteFormData(prev => ({...prev, email: e.target.value}))}
                  required
                />
              </div>
              <div>
                <Label htmlFor="phone">Телефон</Label>
                <Input
                  id="phone"
                  type="tel"
                  value={quoteFormData.phone}
                  onChange={(e) => setQuoteFormData(prev => ({...prev, phone: e.target.value}))}
                />
              </div>
            </div>

            <div>
              <Label htmlFor="details">Дополнительные детали</Label>
              <Textarea
                id="details"
                placeholder="Особенности инфраструктуры, специфические требования..."
                value={quoteFormData.details}
                onChange={(e) => setQuoteFormData(prev => ({...prev, details: e.target.value}))}
                className="min-h-[80px]"
              />
            </div>

            <div className="flex justify-between">
              <Button type="button" variant="outline" onClick={() => setShowQuoteModal(false)}>
                Отмена
              </Button>
              <Button type="submit">
                <Icon name="Send" size={16} className="mr-2" />
                Отправить запрос
              </Button>
            </div>
          </form>
        </DialogContent>
      </Dialog>

      {/* Модал примера отчёта */}
      <Dialog open={showReportModal} onOpenChange={setShowReportModal}>
        <DialogContent className="sm:max-w-4xl max-h-[90vh] overflow-hidden">
          <DialogHeader>
            <DialogTitle>Пример отчёта по пентесту</DialogTitle>
            <DialogDescription>
              Демонстрационная версия технического отчёта Secvoya
            </DialogDescription>
          </DialogHeader>

          <div className="flex-1 overflow-y-auto">
            <div className="space-y-6">
              {/* Mock PDF Preview */}
              <div className="bg-muted/30 rounded-lg p-6 space-y-6">
                
                {/* Cover */}
                <div className="bg-white p-8 rounded-lg border text-center">
                  <div className="w-16 h-16 bg-primary rounded-lg mx-auto mb-4 flex items-center justify-center">
                    <Icon name="Shield" size={24} className="text-primary-foreground" />
                  </div>
                  <h1 className="text-2xl font-bold text-gray-900 mb-2">
                    Отчёт по результатам пентестирования
                  </h1>
                  <p className="text-gray-600">ООО "Демо-компания"</p>
                  <p className="text-sm text-gray-500 mt-4">
                    Период: 15-29 марта 2024<br/>
                    Secvoya Security Team
                  </p>
                </div>

                {/* Executive Summary */}
                <div className="bg-white p-6 rounded-lg border">
                  <h2 className="text-xl font-bold mb-4">Executive Summary</h2>
                  <p className="text-gray-700 mb-4">
                    В ходе {currentPentest.title.toLowerCase()} было обнаружено{' '}
                    <span className="font-semibold text-red-600">2 критические</span>,{' '}
                    <span className="font-semibold text-orange-600">5 высоких</span> и{' '}
                    <span className="font-semibold text-yellow-600">8 средних</span> уязвимости.
                  </p>
                  
                  <div className="grid md:grid-cols-3 gap-4">
                    <div className="bg-red-50 p-4 rounded-lg border border-red-200 text-center">
                      <div className="text-2xl font-bold text-red-600">2</div>
                      <p className="text-sm text-red-800">Критические</p>
                    </div>
                    <div className="bg-orange-50 p-4 rounded-lg border border-orange-200 text-center">
                      <div className="text-2xl font-bold text-orange-600">5</div>
                      <p className="text-sm text-orange-800">Высокие</p>
                    </div>
                    <div className="bg-yellow-50 p-4 rounded-lg border border-yellow-200 text-center">
                      <div className="text-2xl font-bold text-yellow-600">8</div>
                      <p className="text-sm text-yellow-800">Средние</p>
                    </div>
                  </div>
                </div>

                {/* Sample Vulnerability */}
                <div className="bg-white p-6 rounded-lg border">
                  <h3 className="text-lg font-bold mb-4">Пример найденной уязвимости</h3>
                  <div className="bg-red-50 p-4 rounded-lg border border-red-200">
                    <div className="flex justify-between mb-2">
                      <h4 className="font-semibold text-red-800">SQL Injection в параметре login</h4>
                      <Badge className="bg-red-600 text-white">CRITICAL</Badge>
                    </div>
                    <p className="text-sm text-red-700 mb-2">
                      <strong>URL:</strong> https://demo.example.com/api/login
                    </p>
                    <p className="text-sm text-gray-700">
                      <strong>PoC:</strong> <code className="bg-gray-900 text-green-400 px-2 py-1 rounded">
                        POST /api/login {"{"}"email": "' OR 1=1--", "password": "any"}{"}"}
                      </code>
                    </p>
                  </div>
                </div>

                {/* Roadmap */}
                <div className="bg-white p-6 rounded-lg border">
                  <h3 className="text-lg font-bold mb-4">Дорожная карта исправлений</h3>
                  <div className="space-y-3">
                    <div className="flex items-center space-x-4 p-3 bg-red-50 rounded-lg">
                      <div className="w-4 h-4 bg-red-600 rounded-full"></div>
                      <div className="flex-1">
                        <p className="font-medium">Неделя 1: Критические уязвимости</p>
                        <p className="text-sm text-gray-600">SQL Injection, RCE</p>
                      </div>
                      <span className="text-sm text-gray-500">2 задачи</span>
                    </div>
                    
                    <div className="flex items-center space-x-4 p-3 bg-orange-50 rounded-lg">
                      <div className="w-4 h-4 bg-orange-600 rounded-full"></div>
                      <div className="flex-1">
                        <p className="font-medium">Неделя 2-3: Высокие уязвимости</p>
                        <p className="text-sm text-gray-600">XSS, CSRF, Information Disclosure</p>
                      </div>
                      <span className="text-sm text-gray-500">5 задач</span>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>

          <Separator />
          
          <div className="flex items-center justify-between">
            <p className="text-sm text-muted-foreground">
              Полная версия содержит детальные PoC и рекомендации
            </p>
            <div className="flex items-center space-x-3">
              <Button variant="outline" onClick={() => setShowReportModal(false)}>
                Закрыть
              </Button>
              <Button>
                <Icon name="Download" size={16} className="mr-2" />
                Скачать PDF
              </Button>
            </div>
          </div>
        </DialogContent>
      </Dialog>
    </div>
  );
}