import { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import Icon from '@/components/ui/icon';

export type PentestType = 'external' | 'internal' | 'social' | 'wifi' | 'web' | 'mobile' | 'redteam';
export type CoverageType = 'quick' | 'full' | 'redteam';

interface PentestTabData {
  id: PentestType;
  title: string;
  icon: string;
  what: string;
  whatWeDo: string;
  clientGets: string;
  animation: string;
}

interface PricingData {
  quick: { duration: string; artifacts: string; price: string };
  full: { duration: string; artifacts: string; price: string };
  redteam: { duration: string; artifacts: string; price: string };
}

const pentestTabs: PentestTabData[] = [
  {
    id: 'external',
    title: 'Внешний пентест',
    icon: 'Globe',
    what: 'Проверка внешней поверхности инфраструктуры — веб-сайты, API, публичные сервисы.',
    whatWeDo: 'разведка (OSINT), сканирование периметра, эксплуатация уязвимостей, эскалация доступа.',
    clientGets: 'PoC-уязвимости, риск-оценку, дорожную карту исправлений, бизнес-отчёт.',
    animation: 'external'
  },
  {
    id: 'internal',
    title: 'Внутренний пентест',
    icon: 'Network',
    what: 'Тестирование с позиции злоумышленника внутри сети (инсайдер или компрометация).',
    whatWeDo: 'lateral movement, проверка сегментации, эскалация привилегий, анализ политик.',
    clientGets: 'сценарии атак, карты путей, список критических уязвимостей, приоритетные контрмеры.',
    animation: 'internal'
  },
  {
    id: 'social',
    title: 'Социальная инженерия',
    icon: 'Users',
    what: 'Проверка устойчивости персонала к фишингу и атакам на доверие.',
    whatWeDo: 'фишинг-кампании, звонки, физический доступ (по согл.).',
    clientGets: 'статистику кликов, сценарии фишинга, рекомендации по обучению и реагированию.',
    animation: 'social'
  },
  {
    id: 'wifi',
    title: 'Wi-Fi / беспроводные сети',
    icon: 'Wifi',
    what: 'Анализ безопасности беспроводной инфраструктуры.',
    whatWeDo: 'атаки на WPA/WPA2/WPA3, сегментация гостевых сетей, проверка физической доступности AP.',
    clientGets: 'карту рисков Wi-Fi, PoC по уязвимым AP, рекомендации по настройке.',
    animation: 'wifi'
  },
  {
    id: 'web',
    title: 'Веб-приложения (включая анализ исходного кода)',
    icon: 'Code',
    what: 'Глубокая проверка web/API-приложений.',
    whatWeDo: 'OWASP Top10 + ручные тесты, аудит кода (если доступен).',
    clientGets: 'PoC, list-of-fixes, рекомендации по CI/CD-интеграции.',
    animation: 'web'
  },
  {
    id: 'mobile',
    title: 'Мобильные приложения (включая анализ исходного кода)',
    icon: 'Smartphone',
    what: 'Тестирование iOS/Android-приложений.',
    whatWeDo: 'статический/динамический анализ, защита API, управление секретами.',
    clientGets: 'PoC, рекомендации по хранению данных и защите API.',
    animation: 'mobile'
  },
  {
    id: 'redteam',
    title: 'Red Team',
    icon: 'Shield',
    what: 'Имитация целевых APT-атак.',
    whatWeDo: 'разведка, многошаговые атаки, обход SOC/EDR, комбинированные векторы.',
    clientGets: 'сценарий атаки, доказательства PoC, рекомендации по процессам реагирования.',
    animation: 'redteam'
  }
];

const pricingData: Record<PentestType, PricingData> = {
  external: {
    quick: { duration: '1-3 дня', artifacts: 'Краткий отчёт, основные уязвимости', price: 'от 150 000₽' },
    full: { duration: '2-3 недели', artifacts: 'Полный отчёт, PoC, roadmap', price: 'от 400 000₽' },
    redteam: { duration: 'по согласованию', artifacts: 'Комплексный сценарий атаки', price: 'от 800 000₽' }
  },
  internal: {
    quick: { duration: '2-4 дня', artifacts: 'Базовая проверка сегментации', price: 'от 200 000₽' },
    full: { duration: '2-4 недели', artifacts: 'Полный анализ, lateral movement', price: 'от 500 000₽' },
    redteam: { duration: 'по согласованию', artifacts: 'APT-сценарии', price: 'от 900 000₽' }
  },
  social: {
    quick: { duration: '1-2 недели', artifacts: 'Фишинг-кампания', price: 'от 100 000₽' },
    full: { duration: '3-4 недели', artifacts: 'Комплексная SE + обучение', price: 'от 300 000₽' },
    redteam: { duration: 'по согласованию', artifacts: 'Целевые атаки', price: 'от 600 000₽' }
  },
  wifi: {
    quick: { duration: '1-2 дня', artifacts: 'Быстрая проверка AP', price: 'от 80 000₽' },
    full: { duration: '1-2 недели', artifacts: 'Полный аудит Wi-Fi', price: 'от 250 000₽' },
    redteam: { duration: 'по согласованию', artifacts: 'Скрытые атаки через Wi-Fi', price: 'от 500 000₽' }
  },
  web: {
    quick: { duration: '3-5 дней', artifacts: 'OWASP Top10 проверка', price: 'от 120 000₽' },
    full: { duration: '2-4 недели', artifacts: 'Глубокий аудит + код', price: 'от 350 000₽' },
    redteam: { duration: 'по согласованию', artifacts: 'Целевые веб-атаки', price: 'от 700 000₽' }
  },
  mobile: {
    quick: { duration: '3-5 дней', artifacts: 'Основные уязвимости', price: 'от 150 000₽' },
    full: { duration: '2-3 недели', artifacts: 'Полный анализ + код', price: 'от 400 000₽' },
    redteam: { duration: 'по согласованию', artifacts: 'Advanced mobile threats', price: 'от 750 000₽' }
  },
  redteam: {
    quick: { duration: '1-2 недели', artifacts: 'Базовые сценарии', price: 'от 500 000₽' },
    full: { duration: '1-3 месяца', artifacts: 'Полный Red Team engagement', price: 'от 1 500 000₽' },
    redteam: { duration: 'по согласованию', artifacts: 'Extended APT simulation', price: 'от 2 500 000₽' }
  }
};

interface PentestTabsProps {
  onRequestQuote: (type: PentestType, coverage: CoverageType) => void;
}

export default function PentestTabs({ onRequestQuote }: PentestTabsProps) {
  const [activeTab, setActiveTab] = useState<PentestType>('external');
  const [coverage, setCoverage] = useState<CoverageType>('full');

  const activeTabData = pentestTabs.find(tab => tab.id === activeTab)!;
  const currentPricing = pricingData[activeTab][coverage];

  return (
    <div className="grid lg:grid-cols-4 gap-8">
      {/* Left Sidebar - Tabs */}
      <div className="lg:col-span-1">
        <div className="space-y-2 sticky top-24">
          {pentestTabs.map((tab) => (
            <button
              key={tab.id}
              onClick={() => setActiveTab(tab.id)}
              className={`w-full text-left p-4 rounded-lg transition-all duration-300 group ${
                activeTab === tab.id
                  ? 'bg-primary text-primary-foreground shadow-md'
                  : 'bg-card hover:bg-muted border border-border'
              }`}
            >
              <div className="flex items-center space-x-3">
                <Icon
                  name={tab.icon as any}
                  size={20}
                  className={`${
                    activeTab === tab.id ? 'text-primary-foreground' : 'text-muted-foreground group-hover:text-foreground'
                  }`}
                />
                <span className="text-sm font-medium">{tab.title}</span>
              </div>
            </button>
          ))}
        </div>
      </div>

      {/* Right Content */}
      <div className="lg:col-span-3">
        <Card className="h-full">
          <CardHeader>
            <div className="flex items-center justify-between">
              <div className="flex items-center space-x-3">
                <div className="w-12 h-12 bg-primary/10 rounded-lg flex items-center justify-center">
                  <Icon name={activeTabData.icon as any} size={24} className="text-primary" />
                </div>
                <div>
                  <CardTitle className="text-xl">{activeTabData.title}</CardTitle>
                </div>
              </div>

              {/* Animation placeholder */}
              <div className="w-16 h-16 bg-muted rounded-lg flex items-center justify-center">
                <Icon name="Activity" size={24} className="text-muted-foreground animate-pulse" />
              </div>
            </div>
          </CardHeader>

          <CardContent className="space-y-6">
            {/* Coverage Filter */}
            <div className="bg-muted/50 p-4 rounded-lg">
              <h4 className="font-semibold mb-3">Выберите покрытие:</h4>
              <div className="flex flex-wrap gap-2">
                <button
                  onClick={() => setCoverage('quick')}
                  className={`px-3 py-2 rounded-full text-sm font-medium transition-colors ${
                    coverage === 'quick'
                      ? 'bg-primary text-primary-foreground'
                      : 'bg-background hover:bg-muted'
                  }`}
                >
                  Quick (1-5 дн)
                </button>
                <button
                  onClick={() => setCoverage('full')}
                  className={`px-3 py-2 rounded-full text-sm font-medium transition-colors ${
                    coverage === 'full'
                      ? 'bg-primary text-primary-foreground'
                      : 'bg-background hover:bg-muted'
                  }`}
                >
                  Full (2-4 нед)
                </button>
                <button
                  onClick={() => setCoverage('redteam')}
                  className={`px-3 py-2 rounded-full text-sm font-medium transition-colors ${
                    coverage === 'redteam'
                      ? 'bg-primary text-primary-foreground'
                      : 'bg-background hover:bg-muted'
                  }`}
                >
                  Red Team (по согл.)
                </button>
              </div>
            </div>

            {/* Pricing Widget */}
            <Card className="bg-orange/5 border-orange/20">
              <CardContent className="p-4">
                <div className="flex items-center justify-between">
                  <div>
                    <Badge variant="outline" className="text-orange border-orange mb-2">
                      {coverage === 'quick' ? 'Quick' : coverage === 'full' ? 'Full' : 'Red Team'}
                    </Badge>
                    <p className="text-sm text-muted-foreground">{currentPricing.duration}</p>
                    <p className="text-xs text-muted-foreground mt-1">{currentPricing.artifacts}</p>
                  </div>
                  <div className="text-right">
                    <p className="text-lg font-bold text-orange">{currentPricing.price}</p>
                    <Button 
                      size="sm" 
                      onClick={() => onRequestQuote(activeTab, coverage)}
                      className="mt-2"
                    >
                      Запросить оценку
                    </Button>
                  </div>
                </div>
              </CardContent>
            </Card>

            {/* Content Sections */}
            <div className="grid md:grid-cols-3 gap-4">
              <Card>
                <CardHeader>
                  <CardTitle className="text-base flex items-center space-x-2">
                    <Icon name="Info" size={16} className="text-primary" />
                    <span>Что это</span>
                  </CardTitle>
                </CardHeader>
                <CardContent>
                  <p className="text-sm text-muted-foreground">{activeTabData.what}</p>
                </CardContent>
              </Card>

              <Card>
                <CardHeader>
                  <CardTitle className="text-base flex items-center space-x-2">
                    <Icon name="Settings" size={16} className="text-primary" />
                    <span>Что мы делаем</span>
                  </CardTitle>
                </CardHeader>
                <CardContent>
                  <p className="text-sm text-muted-foreground">{activeTabData.whatWeDo}</p>
                </CardContent>
              </Card>

              <Card>
                <CardHeader>
                  <CardTitle className="text-base flex items-center space-x-2">
                    <Icon name="Package" size={16} className="text-primary" />
                    <span>Что получает клиент</span>
                  </CardTitle>
                </CardHeader>
                <CardContent>
                  <p className="text-sm text-muted-foreground">{activeTabData.clientGets}</p>
                </CardContent>
              </Card>
            </div>
          </CardContent>
        </Card>
      </div>
    </div>
  );
}